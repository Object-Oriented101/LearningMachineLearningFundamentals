#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Jun 10 18:36:11 2019

@author: reality
"""

def encode_keyword(string, cipher):
    #creating the cipher text key
    key = cipher
    #Notes any characters in plain text
    newInsertor = {}
    fcounter = -1;
    for i in string:
        fcounter = fcounter + 1
        if ord(i) < 65 or ord(i) > 122: #If it is other than a letter, notes the character and index
            newInsertor[fcounter] = i
    
    print(newInsertor)
    #This will create unique key based on the cipher
    counter = -1; #keep track of each index
    while counter != len(key)-1: #loop runs until end each index
        counter = counter +1 #keeps track of the index
        i = key[counter]
        if ord(i) < 65 or ord(i) > 122: #If it is other than a letter, notes the character and index
            continue
        else:
            letterIndex = key[counter+1:].find(i)
            if letterIndex != -1: #if the letter is further in the text, remove it
                forwardWord = key[counter+1:]
                forwardWord  = forwardWord.replace(i,"")
                key = key[:counter+1] + forwardWord
    key = key.replace(" " , "")
    
    #This adds the remaining alphabet letters into the key
    for z in range(97,123):
        letter = chr(z);
        if key.find(letter) != -1:
            continue;
        key = key + letter;
    print(key)
    
    #This will encrypt the string based on the key
    alpha = "abcdefghijklmnopqrstuvwxyz"
    encryptPhrase = ""

    
    string = string.replace(" " , "" )
    for i in string:
        if ord(i) < 65 or ord(i) > 122: #If it is other than a letter, notes the character and index
            continue
        correctIndex = alpha.find(i);
        encryptPhrase += key[correctIndex]
    print(encryptPhrase)

    #This will add any extra previous symbols back in the encrypted message
    for i in newInsertor:
        encryptPhrase = encryptPhrase[0:i] + newInsertor[i] + encryptPhrase[i:]
    print(encryptPhrase)
    return encryptPhrase
    
           
   
    
encode_keyword('cogworks 2018', 'python')